// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderApi.Context;

#nullable disable

namespace OrderApi.Migrations
{
    [DbContext(typeof(OrderContext))]
    partial class OrderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderDomain.Models.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = "_6dcd9756-6568-4d23-8d03-12013b34ca27-1394ACB3D54D7D1528983FED925EC9AC",
                            CreatedAt = new DateTime(2023, 4, 28, 18, 9, 4, 880, DateTimeKind.Local).AddTicks(5443)
                        },
                        new
                        {
                            Id = "_6dcd9756-6568-4d23-8d03-12013b34ca27-727879562184A82CAC08A403F1F78D31",
                            CreatedAt = new DateTime(2023, 4, 28, 18, 9, 4, 880, DateTimeKind.Local).AddTicks(5500)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
