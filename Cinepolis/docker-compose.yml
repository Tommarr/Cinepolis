version: '3.4'

services:
#Microservices
  paymentapi:
    image: ${DOCKER_REGISTRY-}paymentapi
    build:
      context: .
      dockerfile: Services/Payment/PaymentApi/Dockerfile
    depends_on: 
      - messagebroker
      - db-mssql
    environment:
      - CONNECTIONSTRINGS__PaymentDB=Data Source=host.docker.internal,1433;Database=PaymentDB;User ID=sa;Password=mssql1Ipw; TrustServerCertificate=True

    #networks:
    #  - mynetwork

  orderapi:
    image: ${DOCKER_REGISTRY-}orderapi
    build:
      context: .
      dockerfile: Services/Order/OrderApi/Dockerfile
    depends_on: 
      - messagebroker
      - db-mssql
    environment:
      - CONNECTIONSTRINGS__OrderDB=Data Source=host.docker.internal,1433;Database=OrderDB;User ID=sa;Password=mssql1Ipw; TrustServerCertificate=True

      #- CONNECTIONSTRINGS__OrderDB=Server=db-mssql,1433;Database=OrderDB;User ID=sa;Password=mssql1Ipw; TrustServerCertificate=True
    #networks:
    #  - mynetwork

  movieapi:
    image: ${DOCKER_REGISTRY-}movieapi
    build:
      context: .
      dockerfile: Services/Movie/MovieApi/Dockerfile

#Message broker
  messagebroker:
    image: rabbitmq:3-management-alpine
    container_name: 'messagebroker-rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    #networks:
    #  - mynetwork

#Databases
  db-mssql:
    container_name: orderdb-mssql
    image: 'mcr.microsoft.com/mssql/server:2022-latest'
    ports:
      - 1433:1433
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=mssql1Ipw
    #networks:
    #  - mynetwork

#monitoring
#  prometheus:
#    image: prom/prometheus
#    restart: always
#    ports:
#      - 9090:9090
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
#    networks:
#      - mynetwork

#  grafana: 
#    image: grafana/grafana
#    command:
#    environment:
#      - GF_SECURITY_ADMIN_PASSWORD=P@ssw0rd
#    restart: always
#    ports:
#      - 3000:3000
#    networks:
#      - mynetwork


#networks:
#  mynetwork:
#    driver: bridge




volumes:
  db_volume:
